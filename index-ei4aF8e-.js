(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const n of document.querySelectorAll('link[rel="modulepreload"]'))o(n);new MutationObserver(n=>{for(const a of n)if(a.type==="childList")for(const i of a.addedNodes)i.tagName==="LINK"&&i.rel==="modulepreload"&&o(i)}).observe(document,{childList:!0,subtree:!0});function s(n){const a={};return n.integrity&&(a.integrity=n.integrity),n.referrerPolicy&&(a.referrerPolicy=n.referrerPolicy),n.crossOrigin==="use-credentials"?a.credentials="include":n.crossOrigin==="anonymous"?a.credentials="omit":a.credentials="same-origin",a}function o(n){if(n.ep)return;n.ep=!0;const a=s(n);fetch(n.href,a)}})();const x=document.querySelector(".chatBox"),l=document.querySelector("#chatAvatar"),y=document.querySelector("#chatName"),L=document.getElementById("messageBox");let p=null;function B(t){const e=document.createElement("div");e.classList.add("block");const s=t.participants[0].charAt(0).toUpperCase(),o=t.messages.length?C(t.messages[t.messages.length-1].time):"",n=t.messages.length?t.messages[t.messages.length-1].content:"Нет сообщений",a='<span class="material-icons read-icon" style="margin-left: 5px;">done_all</span>';return e.innerHTML=`
      <div class="imgBx">
        <img 
          id="chatAvatar${t.chatId}" 
          src="${t.chatId}.png" 
          alt="Chat avatar" 
          onerror="this.style.display='none'; this.nextElementSibling.style.display='flex';" 
        />
        <div class="avatarLetter" style="display: none; justify-content: center; align-items: center; font-size: 24px; width: 40px; height: 40px; border-radius: 50%; background-color: #8f9efe;">
          ${s}
        </div>
      </div>
      <div class="details">
        <div class="listHead">
          <h4>${t.participants[0]}</h4>
          <div class="time-delete-wrapper">
            <span class="material-symbols-outlined delete-chat" data-chat-id="${t.chatId}">delete</span> <!-- Иконка удаления -->
            <p class="time">${o}</p>
          </div>
        </div>
        <div class="message_p" style="display: flex; justify-content: space-between; align-items: center;">
          <p>${n}</p>
          ${a}
        </div>
      </div>`,e.addEventListener("click",()=>D(t)),e}function A(t,e,s){const o=`${t}.png`,n=s.innerHTML.charAt(0).toUpperCase();e.src=o,e.onload=()=>{e.style.display="block",e.nextElementSibling.style.display="none"},e.onerror=()=>{e.style.display="none";const a=e.nextElementSibling;a.style.display="flex",a.innerHTML=n}}function D(t){x.classList.remove("hide"),L.innerHTML="",p=t.chatId,y.innerHTML=`${t.participants[0]} <br /><span>online</span>`;const e=t.participants[0].charAt(0).toUpperCase();A(t.chatId,l,y),l.onerror=()=>{l.nextElementSibling.style.display="flex",l.nextElementSibling.innerHTML=e},t.messages.forEach(s=>{const o=document.createElement("div");s.type==="incoming"?o.classList.add("message","incoming"):s.type==="outgoing"&&o.classList.add("message","outgoing");const n=C(s.time);o.innerHTML=`
      <p>${s.content}</p>
      <div class="message-footer">
        <span class="time">${n}</span>
        <span class="material-icons read-icon">done_all</span> <!-- Иконка прочтения -->
      </div>
    `,L.appendChild(o)})}function C(t){return new Date(t).toLocaleTimeString([],{hour:"2-digit",minute:"2-digit"})}const c={chats:[{chatId:1,participants:["You","right"],messages:[{type:"incoming",from:"You",content:"Hey, how's it going?",time:"2024-10-15T10:00"},{type:"outgoing",from:"right",content:"All good, thanks! How about you?",time:"2024-10-15T10:05"},{type:"incoming",from:"You",content:"I'm doing well, thanks for asking!",time:"2024-10-15T10:10"}]},{chatId:2,participants:["Jane Smith","right"],messages:[{type:"outgoing",from:"right",content:"Hey Jane, let's catch up soon!",time:"2024-10-15T12:30"},{type:"incoming",from:"Jane Smith",content:"Sure! How about tomorrow?",time:"2024-10-15T12:35"},{type:"outgoing",from:"right",content:"Sounds good. Let's meet at 10 AM.",time:"2024-10-15T12:40"}]}]};function r(){try{localStorage.setItem("chatData",JSON.stringify(c)),console.log("Чаты успешно сохранены в localStorage.")}catch(t){console.error("Ошибка при сохранении чатов в localStorage:",t)}}function E(){try{const t=localStorage.getItem("chatData");t&&(c.chats=JSON.parse(t).chats),console.log("Чаты успешно загружены из localStorage.")}catch(t){console.error("Ошибка при загрузке чатов из localStorage:",t)}}function H(){c.chats.sort((t,e)=>{const s=t.messages.length?new Date(t.messages[t.messages.length-1].time):new Date(0);return(e.messages.length?new Date(e.messages[e.messages.length-1].time):new Date(0))-s})}const v=document.querySelector(".chatlist");E();H();g();function g(){v.innerHTML="",c.chats.forEach(e=>{const s=B(e);v.appendChild(s)}),document.querySelectorAll(".delete-chat").forEach(e=>{e.addEventListener("click",s=>{s.stopPropagation();const o=parseInt(e.getAttribute("data-chat-id"));$(o)})})}function $(t){c.chats=c.chats.filter(e=>e.chatId!==t),r(),g()}g();r();document.addEventListener("DOMContentLoaded",()=>{const t=document.querySelector(".material-symbols-outlined"),e=document.querySelector("#searchInput"),s=document.querySelectorAll(".chatlist .block");function o(){t.classList.add("hide"),e.classList.add("active"),e.focus()}function n(){const a=e.value.toLowerCase();s.forEach(i=>{const w=i.querySelector(".listHead h4").innerText.toLowerCase();i.style.display=w.includes(a)?"":"none"})}t.addEventListener("click",o),e.addEventListener("input",n),e.addEventListener("blur",()=>{e.value===""&&(t.classList.remove("hide"),e.classList.remove("active"))}),e.addEventListener("focus",()=>{t.classList.add("hide")})});const f=document.getElementById("chatNameInput"),b=document.getElementById("createChatButton"),M=document.getElementById("chatModal"),q=document.getElementById("modalClose");function k(t){return t.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&#039;")}function N(){let t=f.value.trim();if(t!==""){t=k(t);const e=new Date;new Intl.DateTimeFormat("ru-RU",{timeZone:"Europe/Moscow",hour:"2-digit",minute:"2-digit"}).format(e);const s={chatId:c.chats.length+1,participants:[t,"right"],messages:[]};c.chats.unshift(s),r(),f.value="",g(),T()}}b.addEventListener("click",N);function O(){M.classList.add("active")}function T(){f.value="",M.classList.remove("active")}q.addEventListener("click",T);document.getElementById("openModalButton").addEventListener("click",O);function P(){c.chats.sort((t,e)=>{const s=t.messages.length?new Date(t.messages[t.messages.length-1].time):new Date(0);return(e.messages.length?new Date(e.messages[e.messages.length-1].time):new Date(0))-s})}const S=document.querySelector(".chatlist");E();P();m();function m(){S.innerHTML="",c.chats.forEach(e=>{const s=B(e);S.appendChild(s)}),document.querySelectorAll(".delete-chat").forEach(e=>{e.addEventListener("click",s=>{s.stopPropagation();const o=parseInt(e.getAttribute("data-chat-id"));J(o)})})}function J(t){c.chats=c.chats.filter(e=>e.chatId!==t),r(),m()}m();r();const u=document.getElementById("messageBox"),U=document.querySelector(".chatBox"),F=document.querySelector("#back"),R=document.querySelector("#send-btn"),I=document.querySelector("#messageInput"),Y=document.getElementById("toggleAlignment");let d="right",h=!0;function _(t){return t.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&#039;")}R.addEventListener("click",()=>{const t=I.value.trim();if(t&&p!==null){const e=_(t),s={type:d==="right"?"outgoing":"incoming",from:d,content:e,time:new Date().toISOString()},o=c.chats.find(n=>n.chatId===p);if(o){o.messages.push(s);const n=document.createElement("div");n.classList.add("message",d==="right"?"outgoing":"incoming");const a=new Date(s.time).toLocaleTimeString([],{hour:"2-digit",minute:"2-digit"});n.innerHTML=`<p>${e}</p><span class="time">${a}</span>`,u.appendChild(n),u.scrollTop=u.scrollHeight,I.value="",r()}}});F.addEventListener("click",()=>{U.classList.add("hide"),m()});function j(){document.querySelectorAll(".message").forEach(e=>{e.classList.contains("incoming")?(e.classList.remove("incoming"),e.classList.add("outgoing"),e.style.textAlign="right",e.style.marginLeft="auto",e.style.marginRight="unset"):e.classList.contains("outgoing")&&(e.classList.remove("outgoing"),e.classList.add("incoming"),e.style.textAlign="left",e.style.marginRight="auto",e.style.marginLeft="unset")}),d=h?"left":"right",h=!h}Y.addEventListener("click",j);
