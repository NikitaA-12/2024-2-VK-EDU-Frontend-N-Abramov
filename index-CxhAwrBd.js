(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const n of document.querySelectorAll('link[rel="modulepreload"]'))o(n);new MutationObserver(n=>{for(const a of n)if(a.type==="childList")for(const c of a.addedNodes)c.tagName==="LINK"&&c.rel==="modulepreload"&&o(c)}).observe(document,{childList:!0,subtree:!0});function s(n){const a={};return n.integrity&&(a.integrity=n.integrity),n.referrerPolicy&&(a.referrerPolicy=n.referrerPolicy),n.crossOrigin==="use-credentials"?a.credentials="include":n.crossOrigin==="anonymous"?a.credentials="omit":a.credentials="same-origin",a}function o(n){if(n.ep)return;n.ep=!0;const a=s(n);fetch(n.href,a)}})();const M=document.querySelector(".chatBox"),r=document.querySelector("#chatAvatar"),y=document.querySelector("#chatName"),L=document.getElementById("messageBox");let l=null;function S(e){const t=document.createElement("div");t.classList.add("block");const s=e.participants[0].charAt(0).toUpperCase(),o=e.messages.length?E(e.messages[e.messages.length-1].time):"",n=e.messages.length?e.messages[e.messages.length-1].content:"Нет сообщений",a='<span class="material-icons read-icon" style="margin-left: 5px;">done_all</span>';return t.innerHTML=`
      <div class="imgBx">
        <img 
          id="chatAvatar${e.chatId}" 
          src="/${e.chatId}.png" 
          alt="Chat avatar" 
          onerror="this.style.display='none'; this.nextElementSibling.style.display='flex';" 
        />
        <div class="avatarLetter" style="display: none; justify-content: center; align-items: center; font-size: 24px; width: 40px; height: 40px; border-radius: 50%; background-color: #8f9efe;">
          ${s}
        </div>
      </div>
      <div class="details">
        <div class="listHead">
          <h4>${e.participants[0]}</h4>
          <div class="time-delete-wrapper">
            <span class="material-symbols-outlined delete-chat" data-chat-id="${e.chatId}">delete</span> <!-- Иконка удаления -->
            <p class="time">${o}</p>
          </div>
        </div>
        <div class="message_p" style="display: flex; justify-content: space-between; align-items: center;">
          <p>${n}</p>
          ${a}
        </div>
      </div>`,t.addEventListener("click",()=>x(e)),t}function w(e,t,s){const o=`/${e}.png`,n=s.innerHTML.charAt(0).toUpperCase();t.src=o,t.onload=()=>{t.style.display="block",t.nextElementSibling.style.display="none"},t.onerror=()=>{t.style.display="none";const a=t.nextElementSibling;a.style.display="flex",a.innerHTML=n}}function x(e){M.classList.remove("hide"),L.innerHTML="",l=e.chatId,y.innerHTML=`${e.participants[0]} <br /><span>online</span>`;const t=e.participants[0].charAt(0).toUpperCase();w(e.chatId,r,y),r.onerror=()=>{r.nextElementSibling.style.display="flex",r.nextElementSibling.innerHTML=t},e.messages.forEach(s=>{const o=document.createElement("div");s.type==="incoming"?o.classList.add("message","incoming"):s.type==="outgoing"&&o.classList.add("message","outgoing");const n=E(s.time);o.innerHTML=`
      <p>${s.content}</p>
      <div class="message-footer">
        <span class="time">${n}</span>
        <span class="material-icons read-icon">done_all</span> <!-- Иконка прочтения -->
      </div>
    `,L.appendChild(o)})}function E(e){return new Date(e).toLocaleTimeString([],{hour:"2-digit",minute:"2-digit"})}const i={chats:[{chatId:1,participants:["You","right"],messages:[{type:"incoming",from:"You",content:"Hey, how's it going?",time:"2024-10-15T10:00"},{type:"outgoing",from:"right",content:"All good, thanks! How about you?",time:"2024-10-15T10:05"},{type:"incoming",from:"You",content:"I'm doing well, thanks for asking!",time:"2024-10-15T10:10"}]},{chatId:2,participants:["Jane Smith","right"],messages:[{type:"outgoing",from:"right",content:"Hey Jane, let's catch up soon!",time:"2024-10-15T12:30"},{type:"incoming",from:"Jane Smith",content:"Sure! How about tomorrow?",time:"2024-10-15T12:35"},{type:"outgoing",from:"right",content:"Sounds good. Let's meet at 10 AM.",time:"2024-10-15T12:40"}]}]};function d(){try{localStorage.setItem("chatData",JSON.stringify(i)),console.log("Чаты успешно сохранены в localStorage.")}catch(e){console.error("Ошибка при сохранении чатов в localStorage:",e)}}function k(){try{const e=localStorage.getItem("chatData");e&&(i.chats=JSON.parse(e).chats),console.log("Чаты успешно загружены из localStorage.")}catch(e){console.error("Ошибка при загрузке чатов из localStorage:",e)}}function A(){i.chats.sort((e,t)=>{const s=e.messages.length?new Date(e.messages[e.messages.length-1].time):new Date(0);return(t.messages.length?new Date(t.messages[t.messages.length-1].time):new Date(0))-s})}const v=document.querySelector(".chatlist");k();A();m();function m(){v.innerHTML="",i.chats.forEach(t=>{const s=S(t);v.appendChild(s)}),document.querySelectorAll(".delete-chat").forEach(t=>{t.addEventListener("click",s=>{s.stopPropagation();const o=parseInt(t.getAttribute("data-chat-id"));H(o)})})}function H(e){const t=document.querySelector(`[data-chat-id="${e}"]`);if(t){const s=t.closest(".block");s&&(s.classList.add("removing"),s.addEventListener("animationend",()=>{q(e)}))}}function q(e){i.chats=i.chats.filter(t=>t.chatId!==e),d(),m()}m();d();document.addEventListener("DOMContentLoaded",()=>{const e=document.querySelector(".material-symbols-outlined"),t=document.querySelector("#searchInput"),s=document.querySelectorAll(".chatlist .block");function o(){e.classList.add("hide"),t.classList.add("active"),t.focus()}function n(){const a=t.value.toLowerCase();s.forEach(c=>{const b=c.querySelector(".listHead h4").innerText.toLowerCase();c.style.display=b.includes(a)?"":"none"})}e.addEventListener("click",o),t.addEventListener("input",n),t.addEventListener("blur",()=>{t.value===""&&(e.classList.remove("hide"),t.classList.remove("active"))}),t.addEventListener("focus",()=>{e.classList.add("hide")})});const f=document.getElementById("chatNameInput"),$=document.getElementById("createChatButton"),I=document.getElementById("chatModal"),D=document.querySelector(".chatlist");function C(){let e=f.value.trim();if(e!==""){e=J(e);const t=new Date;new Intl.DateTimeFormat("ru-RU",{timeZone:"Europe/Moscow",hour:"2-digit",minute:"2-digit"}).format(t);const s={chatId:i.chats.length+1,participants:[e,"right"],messages:[]};i.chats.unshift(s),d();const o=S(s);o.classList.add("chat-animate"),D.prepend(o),setTimeout(()=>{o.classList.remove("chat-animate")},500),T()}}$.addEventListener("click",C);const N=document.getElementById("modalClose");function O(){I.classList.add("active")}function T(){f.value="",I.classList.remove("active")}N.addEventListener("click",T);document.getElementById("openModalButton").addEventListener("click",O);function J(e){return e.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&#039;")}f.addEventListener("keypress",e=>{e.key==="Enter"&&C()});const g=document.getElementById("messageBox"),P=document.querySelector(".chatBox"),U=document.querySelector("#back"),F=document.querySelector("#send-btn"),h=document.querySelector("#messageInput");let p="right";function B(){const e=h.value.trim();if(e&&l!==null){const t=_(e);if(t&&l!==null){const s={type:p==="right"?"outgoing":"incoming",from:p,content:t,time:new Date().toISOString()},o=i.chats.find(n=>n.chatId===l);if(o){o.messages.push(s);const n=document.createElement("div");n.classList.add("message","outgoing","bubble-animation");const a=new Date(s.time).toLocaleTimeString([],{hour:"2-digit",minute:"2-digit"});n.innerHTML=`<p>${t}</p><span class="time">${a}</span>`,g.appendChild(n),g.scrollTop=g.scrollHeight,h.value="",d(),setTimeout(()=>{n.classList.remove("bubble-animation")},500)}}}}F.addEventListener("click",B);h.addEventListener("keydown",e=>{e.key==="Enter"&&(e.preventDefault(),B())});U.addEventListener("click",()=>{P.classList.add("hide"),m()});const R=document.getElementById("toggleAlignment");let u=!0;function Y(){document.querySelectorAll(".message").forEach(t=>{t.classList.contains("incoming")?(t.classList.remove("incoming"),t.classList.add("outgoing"),t.style.textAlign="right",t.style.marginLeft="auto",t.style.marginRight="unset"):t.classList.contains("outgoing")&&(t.classList.remove("outgoing"),t.classList.add("incoming"),t.style.textAlign="left",t.style.marginRight="auto",t.style.marginLeft="unset")}),p=u?"left":"right",u=!u}R.addEventListener("click",Y);function _(e){return e.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&#039;")}
